// Generated by CoffeeScript 1.4.0

/*
#
# Copyright (c) Microsoft Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
*/


(function() {

  exports.isObject = function(obj) {
    return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase() === 'object';
  };

  exports.isString = function(obj) {
    return typeof obj === 'string';
  };

  exports.isFunction = function(obj) {
    return typeof obj === 'function';
  };

  exports.isArray = Array.isArray;

  exports.isNumber = function(obj) {
    return typeof obj === 'number';
  };

  exports.isBoolean = function(obj) {
    return typeof obj === 'boolean';
  };

  exports.isDate = function(obj) {
    return (obj != null ? obj.constructor : void 0) === Date;
  };

  if (!Function.prototype.name) {
    Object.defineProperty(Function.prototype, 'name', {
      get: function() {
        var index, prefix, source;
        source = this.toString();
        prefix = 'function ';
        if (source.slice(0, +(prefix.length - 1) + 1 || 9e9) === prefix) {
          index = source.indexOf('(', prefix.length);
          if (index > prefix.length) {
            return source.slice(prefix.length, +(index - 1) + 1 || 9e9);
          }
        }
        return null;
      }
    });
  }

}).call(this);
